{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","countTabs","Math","ceil","tabNums","handlePageChange","tabNum","className","cn","disabled","href","onClick","slice","map","item","index","active","items","App","useState","setPerPage","setCurrentPage","firstItemNum","lastItemNum","length","preparedItems","filter","_","id","value","onChange","event","target","htmlFor","itemContent","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCIIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAoBC,KAAKC,KAAKN,EAAQC,GACtCM,EAAUd,EAAW,EAAGO,GAExBQ,EAAmB,SAACC,GACpBA,IAAWP,GAAeO,EAAS,GAAKA,GAAUL,GACpDD,EAAaM,IAIjB,OACE,qBAAIC,UAAU,aAAd,UACE,oBACEA,UAAWC,IAAG,YAAa,CACzBC,SAA0B,IAAhBV,IAFd,SAKE,mBACE,UAAQ,WACRQ,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBX,EACfY,QAAS,kBAAMN,EAAiBN,EAAc,IALhD,oBAUDK,EAAQQ,MAAM,EAAGX,GAAWY,KAAI,SAACC,EAAMC,GAAP,OAC/B,oBACER,UAAWC,IAAG,YAAa,CACzBQ,OAAQD,EAAQ,IAAMhB,IAF1B,SAME,mBACE,UAAQ,WACRQ,UAAU,YACVG,KAAI,WAAMK,EAAQ,GAClBJ,QAAS,kBAAMN,EAAiBU,EAAQ,IAJ1C,SAMGA,EAAQ,KARND,MAYT,oBACEP,UAAWC,IAAG,YAAa,CACzBC,SAAUV,IAAgBE,IAF9B,SAKE,mBACE,UAAQ,WACRM,UAAU,YACVG,KAAK,QACL,gBAAeX,IAAgBE,EAC/BU,QAAS,kBAAMN,EAAiBN,EAAc,IALhD,wBC5DFkB,EAAQ3B,EAAW,EAAG,IAAIuB,KAAI,SAAAnB,GAAC,qBAAYA,MAEpCwB,EAAgB,WAC3B,MAA8BC,mBAAS,GAAvC,mBAAOrB,EAAP,KAAgBsB,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOpB,EAAP,KAAoBsB,EAApB,KACMC,EAAgBvB,EAAcD,EAAWA,EAAU,EACnDyB,EAAcxB,EAAcD,EAAUmB,EAAMO,OAC9CzB,EAAcD,EACdmB,EAAMO,OAEJC,EAAgBR,EAAMS,QAAO,SAACC,EAAGZ,GAAJ,OACjCA,GAASO,EAAe,GAAKP,EAAQQ,KAOvC,OACE,sBAAKhB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWR,EADX,mBACiCuB,EADjC,cACmDC,EADnD,eACqEN,EAAMO,OAD3E,OAIA,sBAAKjB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRqB,GAAG,kBACHrB,UAAU,eACVsB,MAAO/B,EACPgC,SApBiB,SAACC,GAC1BX,GAAYW,EAAMC,OAAOH,OACzBR,EAAe,IAaT,UAOE,wBAAQQ,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkB1B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEV,MAAOoB,EAAMO,OACb1B,QAASA,EACTC,YAAaA,EACbC,aAAcqB,IAGhB,6BACGI,EAAcZ,KAAI,SAAAqB,GAAW,OAC5B,oBAAI,UAAQ,OAAZ,SAAsCA,GAAdA,YC1DlCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.f8bce4a8.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import cn from 'classnames';\nimport React from 'react';\nimport { getNumbers } from '../../utils';\n\ninterface Props {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (tabNum: number) => void,\n}\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const countTabs: number = Math.ceil(total / perPage);\n  const tabNums = getNumbers(1, total);\n\n  const handlePageChange = (tabNum: number) => {\n    if (tabNum !== currentPage && tabNum > 0 && tabNum <= countTabs) {\n      onPageChange(tabNum);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={cn('page-item', {\n          disabled: currentPage === 1,\n        })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={() => handlePageChange(currentPage - 1)}\n        >\n          «\n        </a>\n      </li>\n      {tabNums.slice(0, countTabs).map((item, index) => (\n        <li\n          className={cn('page-item', {\n            active: index + 1 === currentPage,\n          })}\n          key={item}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${index + 1}`}\n            onClick={() => handlePageChange(index + 1)}\n          >\n            {index + 1}\n          </a>\n        </li>\n      ))}\n      <li\n        className={cn('page-item', {\n          disabled: currentPage === countTabs,\n        })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === countTabs}\n          onClick={() => handlePageChange(currentPage + 1)}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nconst items = getNumbers(1, 42).map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n  const firstItemNum = (currentPage * perPage) - perPage + 1;\n  const lastItemNum = currentPage * perPage < items.length\n    ? currentPage * perPage\n    : items.length;\n\n  const preparedItems = items.filter((_, index) => (\n    index >= firstItemNum - 1 && index < lastItemNum));\n\n  const handlePerPageClick = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(+event.target.value);\n    setCurrentPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstItemNum} - ${lastItemNum} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={handlePerPageClick}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={setCurrentPage}\n      />\n\n      <ul>\n        {preparedItems.map(itemContent => (\n          <li data-cy=\"item\" key={itemContent}>{itemContent}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}